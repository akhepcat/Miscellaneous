#!/bin/bash
ROOT=${1}
trap cleanup SIGINT SIGTERM SIGKILL SIGQUIT SIGABRT SIGSTOP SIGSEGV

cleanup() {
	echo "bailing out..."
	[[ ${MOUNTED} -eq 1 ]] && do_umounts
	exit 0
}

do_mounts() {
	# grab all the mountpoints, and submountpoints...
	[[ ! -e ${ROOT}/dev/tty0 ]] && mount --rbind /dev ${ROOT}/dev
	[[ ! -e ${ROOT}/dev/pts/ptmx ]] && mount --rbind /dev/pts ${ROOT}/dev/pts
	[[ ! -e ${ROOT}/proc/version ]] && mount --rbind /proc ${ROOT}/proc
	[[ ! -e ${ROOT}/sys/devices/cpu ]] && mount --rbind /sys ${ROOT}/sys

	MOUNTED=1
}

do_umounts() {
	[[ ${MOUNTED:-0} -eq 1 ]] && umount --recursive ${ROOT}/sys ${ROOT}/proc ${ROOT}/dev >/dev/null 2>&1
}

check_emu() {
	if [ -n "$(ls ${ROOT}/lib*/ld-linux* 2>/dev/null)" -a -n "$(ls /proc/sys/fs/binfmt_misc/qemu-*  2>/dev/null)" ]
	then
		# we can see the library, so we can figure out the emulation
		if [ -n "$(ls -l ${ROOT}/lib64/ld-linux* 2>/dev/null | grep x86_64 )" -o  -n "$(ls -l ${ROOT}/lib/ld-linux* 2>/dev/null | grep i386)" ]
		then
			# ls -l  /lib64/ld-linux*
			# /lib64/ld-linux-x86-64.so.2 -> /lib/x86_64-linux-gnu/ld-2.24.so*
			# ls -l  /lib/ld-linux*
			# /lib/ld-linux.so.2 -> i386-linux-gnu/ld-2.24.so*
			EMU=aarch64
		elif [ -n "$(ls -l ${ROOT}/lib/ld-linux* 2>/dev/null | grep armeb )" ]
		then
			EMU=armeb
		elif [ -n "$(ls -l ${ROOT}/lib/ld-linux* 2>/dev/null | grep arm-)" ]
		then
			# ls -l  /mnt/disk/lib/ld-linux.so.3
			# /mnt/disk/lib/ld-linux.so.3 -> arm-linux-gnueabi/ld-2.24.so*
			EMU=arm
		else
			EMU=""
		fi
	else
		echo "Can't reliably determine chroot architecture - is it mounted?"
		EMU=""
		cleanup
	fi
	if [ -n "${EMU}" -a ! -r "/proc/sys/fs/binfmt_misc/qemu-${EMU}" ]
	then
		echo "no qemu emulator for architecture ${EMU}"
		EMU=""
		cleanup
	fi
}

# Does it look like a mounted filesystem?
if [ -n "${ROOT}" ]
then
    ROOT=${ROOT%/}	# strip off a trailing '/'
    if [ -d "${ROOT}/etc" ]
    then
	check_emu

	do_mounts

	[[ -r "${ROOT}/etc/hostname" ]] && export debian_chroot=$(cat ${ROOT}/etc/hostname)
	if [ -n "${EMU}" -a ! -r "${ROOT}/usr/bin/qemu-${EMU}-static" ]
	then
		cp /usr/bin/qemu-${EMU}-static ${ROOT}/usr/bin/
	fi

	chroot ${ROOT}

	echo "clean to umount ${ROOT}"
    else
	echo "Can't chroot to dir ${ROOT} - is it a valid filesystem?"
    fi
else
    echo "chroot to where?"
fi

cleanup
