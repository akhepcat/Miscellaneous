#!/bin/bash
# (c) 2020 Leif Sawyer
# License: GPL 3.0 (see https://github.com/akhepcat/)
# Permanent home:  https://github.com/akhepcat/Miscellaneous/
# Direct download: https://raw.githubusercontent.com/akhepcat/Miscellaneous/master/hd-secure-erase
# 
CWD=$(pwd)
PROG="${0##*/}"

trap cleanup SIGINT SIGTERM SIGKILL SIGQUIT SIGABRT SIGSTOP SIGSEGV

cleanup() {
	if [ ${STATUS:-0} -eq 474 ]
	then
		hdparm --security-disable ${SECPASS} ${DISK}
		# we aborted, so the above should unlock the drive
	fi
	echo -e "\n\n"
	exit 0
}


DISK=${1}
SECPASS="password1"
NOW=$(date "+%s")

if [ -z "${DISK}" -o ! -b "${DISK}" ]
then 
	echo "which disk to secure erase?"
	exit 1
fi

ISDISK=$(lsblk -d -o TYPE -n "${DISK}" 2>&1 | grep disk)

if [ "${ISDISK}" != "disk" ]
then
	echo "device ${DISK} is not a disk"
	exit 1
fi

frozen=$(hdparm -I ${DISK} 2>&1 | grep -Ei 'not.*frozen')

if [ -z "${frozen}" ]
then
	echo "You must suspend/resume to memory and try again:"
	echo 'echo -n mem > /sys/power/state'
	exit 1
fi

echo "THIS IS DESTRUCTIVE. YOU MAY BRICK YOUR DRIVE. YOU HAVE BEEN WARNED"

#echo "using security password:  ${SECPASS}"

STATUS=474
hdparm --user-master u --security-set-pass ${SECPASS} ${DISK}
# Show the status, steal the duration with redirection!
DUR=$(hdparm -I ${DISK} 2>&1 | grep -A 20 '^Security:' | tee /dev/stderr | grep 'ENHANCED SECURITY ERASE UNIT' | cut -f2 -d. | awk '{print $1}' )

DUR=${DUR//min/}
DUR=$(( $NOW + ($DUR * 60) ))
COMPLETE=$(date --date="@${DUR}")

echo "next step will erase disk, and will complete on: ${COMPLETE}"

echo "ctrl-c to abort now, or wait 5 seconds to continue"

sleep 5

time hdparm --user-master u --security-erase ${SECPASS} ${DISK}
STATUS=0

echo "Drive ${DISK} is now securely erased"
hdparm -I ${DISK} 2>&1 | grep -A 20 '^Security:'

cleanup
