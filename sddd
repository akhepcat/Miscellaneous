#!/bin/bash

usage() {

	echo "usage:  sddd infile outfile [blocksize]"
	echo "        synchronicely writes infile to outfile using dd"
}

if [ -z "${1}" -o -z "${2}" ];
then
	usage
	exit 1
fi

INFILE="$1"
OUTFILE="$2"
BS=${3//[^0-9kKmMgGbB]/}
BS=${BS:-512}

if [ ! -r "${INFILE}" -a "${INFILE}" != "-" ];
then
	echo "Can't read from ${INFILE}, bailing out"
	exit 1
fi

if [ \( ! -e "${OUTFILE}" -a ! -w "${OUTFILE}" \) -a -z "${OUTFILE##*/dev/*}" ];
then
	echo "Can't write to ${OUTFILE}, bailing out"
	exit 1
fi

echo "copying from ${INFILE} to ${OUTFILE} with blocksize ${BS}"
# conv=fdatasync or oflag=direct ?
#
# dd  or  dcfldd  ??
DD=$(which dcfldd)
if [ -n "${DD}" ]
then
	OFLAG=$(${DD} --help | egrep -wo '(^\s*)direct' | sed 's/[^a-z]//ig')
	if [ -n "${OFLAG}" ]
	then
		DCFD=1
	else
		DCFD=0
	fi
fi
DD=$(which dd)
if [ -n "${DD}" ]
then
	OFLAG=$(${DD} --help | egrep -wo '(^\s*)direct' | sed 's/[^a-z]//ig')
	if [ -n "${OFLAG}" ]
	then
		DDD=1
	else
		DDD=0
	fi
fi

if [ ${DDD:-0} -eq 1 -o ${DCFD:-0} -eq 0 ]
then
	# Always prefer native DD
	DD=dd
	PROGRESS="status=progress"
else
	# only when DDD -eq 0 and DCFD -eq 1
	PROGRESS="status=on"
fi

# Do we support direct io?  we've tested this twice, but this is the final test
OFLAG=$(${DD} --help | egrep -wo '(^\s*)direct' | sed 's/[^a-z]//ig')

# We like to be nice to the IO subsystem:

if [ "${INFILE}" = "-" ]
then
	unset INFILE
fi

ionice -c2 -n7 ${DD} ${INFILE:+if="$INFILE"} bs=${BS} conv=noerror,sync,notrunc ${OFLAG:+oflag=$OFLAG} ${PROGRESS} of="${OUTFILE}" 
